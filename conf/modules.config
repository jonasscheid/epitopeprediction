/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
def genome_reference = params.genome_reference.toLowerCase()

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: GUNZIP_VCF {
        publishDir  = [ enabled: false ]
    }

    withName: VARIANT_SPLIT {
        publishDir = [
            path: { "${params.outdir}/split_input/${meta.sample}" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SNPSIFT_SPLIT {
        publishDir  = [ enabled: false ]
    }

    withName: EPYTOPE_VARIANT_PREDICTION {
        ext.prefix = {"${vcf.baseName}"}
        ext.args   = [
            genome_reference != 'grch37' & genome_reference != 'grch38' ? "--genome_reference '${genome_reference}'" : '',
            genome_reference == 'grch37'                                ? "--genome_reference 'https://grch37.ensembl.org/'" : '',
            genome_reference == 'grch38'                                ? "--genome_reference 'https://www.ensembl.org'" : '',
            params.proteome_reference ? "--proteome_reference ${params.proteome_reference}" : "",
            params.fasta_output ? "--fasta_output" : "",
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/epytope" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }
    withName: CAT_FASTA {
        ext.prefix = {"${meta.sample}"}
        publishDir = [
            path: { "${params.outdir}/epytope" },
            mode: params.publish_dir_mode,
            pattern: '*.fasta'
        ]
    }

    withName: FASTA2PEPTIDES {
        publishDir = [ enabled: false ]
    }

    withName: SPLIT_PEPTIDES {
        publishDir = [ enabled: false ]
    }

    withName: PREPARE_PREDICTION_INPUT {
        ext.prefix = {"${meta.file_id}"}
        publishDir = [ enabled: false ]
    }

    withName: MHCFLURRY {
        ext.prefix = {"${meta.file_id}"}
        publishDir = [
            path: { "${params.outdir}/mhcflurry" },
            mode: params.publish_dir_mode,
            pattern: '*.csv'
        ]
    }

    withName: MHCNUGGETS {
        ext.prefix = {"${meta.file_id}"}
        publishDir = [
            path: { "${params.outdir}/mhcnuggets" },
            mode: params.publish_dir_mode,
            pattern: '*predicted_mhcnuggets.csv'
        ]
    }

    withName: NETMHCPAN {
        ext.prefix = {"${meta.file_id}"}
        ext.args = "-BA"
        publishDir = [
            path: { "${params.outdir}/netmhcpan" },
            mode: params.publish_dir_mode,
            pattern: '*.xls'
        ]
    }

    withName: NETMHCIIPAN {
        ext.prefix = {"${meta.file_id}"}
        ext.args = "-BA"
        publishDir = [
            path: { "${params.outdir}/netmhciipan" },
            mode: params.publish_dir_mode,
            pattern: '*.xls'
        ]
    }

    withName: MERGE_PREDICTIONS {
        ext.prefix = {"${meta.file_id}"}
        ext.args   = params.wide_format_output ? "--wide_format_output" : ""
        publishDir = [ enabled: false ]
    }

    withName: CSVTK_CONCAT {
        ext.prefix = {"${meta.sample}"}
        publishDir = [
            path: { "${params.outdir}/predictions/${meta.sample}" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: MULTIQC {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
